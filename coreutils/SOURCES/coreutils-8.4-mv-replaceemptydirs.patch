diff -urNp coreutils-8.4-orig/src/copy.c coreutils-8.4/src/copy.c
--- coreutils-8.4-orig/src/copy.c	2013-07-31 17:16:57.535510917 +0200
+++ coreutils-8.4/src/copy.c	2013-07-31 17:21:21.395183388 +0200
@@ -1797,8 +1797,12 @@ copy_internal (char const *src_name, cha
 
       /* The rename attempt has failed.  Remove any existing destination
          file so that a cross-device `mv' acts as if it were really using
-         the rename syscall.  */
-      if (unlink (dst_name) != 0 && errno != ENOENT)
+         the rename syscall.  Note both src and dst must both be directories
+         or not, and this is enforced above.  Therefore we check the src_mode
+         and operate on dst_name here as a tighter constraint and also because
+         src_mode is readily available here.  */
+      if ((S_ISDIR (src_mode) ? rmdir (dst_name) : unlink (dst_name)) != 0
+          && errno != ENOENT)
         {
           error (0, errno,
              _("inter-device move failed: %s to %s; unable to remove target"),
diff -urNp coreutils-8.4-orig/tests/mv/part-rename coreutils-8.4/tests/mv/part-rename
--- coreutils-8.4-orig/tests/mv/part-rename	2010-01-03 18:06:20.000000000 +0100
+++ coreutils-8.4/tests/mv/part-rename	2013-07-31 17:20:05.531751349 +0200
@@ -1,7 +1,5 @@
 #!/bin/sh
-# Moving a directory specified with a trailing slash from one partition to
-# another, and giving it a different name at the destination would cause mv
-# to get a failed assertion.
+# Test various cases for moving directories across file systems
 
 # Copyright (C) 2000, 2002, 2004, 2006-2010 Free Software Foundation, Inc.
 
@@ -27,9 +25,36 @@ fi
 cleanup_() { rm -rf "$other_partition_tmpdir"; }
 . "$abs_srcdir/other-fs-tmpdir"
 
-mkdir foo || framework_failure
-
 
+# Moving a directory specified with a trailing slash from one partition to
+# another, and giving it a different name at the destination would cause mv
+# to get a failed assertion.
+mkdir foo || framework_failure
 mv foo/ "$other_partition_tmpdir/bar" || fail=1
 
+# Moving a non directory from source shouldn't replace empty dir in dest
+touch bar || framework_failure_
+mv bar "$other_partition_tmpdir/" && fail=1
+
+
+# Moving a directory from source shouldn't replace non directory in dest
+mkdir bar2
+touch "$other_partition_tmpdir/bar2"
+mv bar2 "$other_partition_tmpdir/" && fail=1
+
+
+# As per POSIX moving directory from source should replace empty dir in dest
+mkdir bar3
+touch bar3/file
+mkdir "$other_partition_tmpdir/bar3"
+mv bar3 "$other_partition_tmpdir/" || fail=1
+test -e "$other_partition_tmpdir/bar3/file" || fail=1
+
+
+# As per POSIX moving directory from source shouldn't update dir in dest
+mkdir bar3
+touch bar3/file2
+mv bar3 "$other_partition_tmpdir/" && fail=1
+test -e "$other_partition_tmpdir/bar3/file2" && fail=1
+
 Exit $fail
