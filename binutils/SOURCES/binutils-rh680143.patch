2010-08-25  H.J. Lu  <hongjiu.lu@intel.com>

	PR ld/11946
	* emultempl/elf32.em (_before_allocation): Check audit entry
	only on ELF input.

Index: binutils-2.20.51.0.2/ld/emultempl/elf32.em
===================================================================
--- binutils-2.20.51.0.2.orig/ld/emultempl/elf32.em
+++ binutils-2.20.51.0.2/ld/emultempl/elf32.em
@@ -1467,33 +1467,34 @@ gld${EMULATION_NAME}_before_allocation (
     rpath = (const char *) getenv ("LD_RUN_PATH");
 
   for (abfd = link_info.input_bfds; abfd; abfd = abfd->link_next)
-    {
-      const char *audit_libs = elf_dt_audit (abfd);
+    if (bfd_get_flavour (abfd) == bfd_target_elf_flavour)
+      {
+	const char *audit_libs = elf_dt_audit (abfd);
 
-      /* If the input bfd contains an audit entry, we need to add it as 
-         a dep audit entry.  */
-      if (audit_libs && *audit_libs != '\0')
-	{
-	  char *cp = xstrdup (audit_libs);
-	  do
-	    {
-	      int more = 0;
-	      char *cp2 = strchr (cp, config.rpath_separator);
-
-	      if (cp2)
-		{
-	          *cp2 = '\0';
-		  more = 1;
-		}
-	      
-	      if (cp != NULL && *cp != '\0')
-	        gld${EMULATION_NAME}_append_to_separated_string (&depaudit, cp);
-
-	      cp = more ? ++cp2 : NULL;
-	    }
-	  while (cp != NULL);
-	}
-    }
+	/* If the input bfd contains an audit entry, we need to add it as 
+	   a dep audit entry.  */
+	if (audit_libs && *audit_libs != '\0')
+	  {
+	    char *cp = xstrdup (audit_libs);
+	    do
+	      {
+		int more = 0;
+		char *cp2 = strchr (cp, config.rpath_separator);
+
+		if (cp2)
+		  {
+		    *cp2 = '\0';
+		    more = 1;
+		  }
+
+		if (cp != NULL && *cp != '\0')
+		  gld${EMULATION_NAME}_append_to_separated_string (&depaudit, cp);
+
+		cp = more ? ++cp2 : NULL;
+	      }
+	    while (cp != NULL);
+	  }
+      }
 
   if (! (bfd_elf_size_dynamic_sections
 	 (link_info.output_bfd, command_line.soname, rpath,
