2010-02-18  H.J. Lu  <hongjiu.lu@intel.com>

bfd/
	* elf32-i386.c (elf_i386_add_symbol_hook): Don't set
	has_ifunc_symbols if the symbol comes from a shared library.
	* elf32-ppc.c (ppc_elf_add_symbol_hook): Likewise.
	* elf64-ppc.c (ppc64_elf_add_symbol_hook): Likewise.
	* elf64-x86-64.c (elf64_x86_64_add_symbol_hook): Likewise.

ld/testsuite/
	* ld-ifunc/ifunc.exp: Expect System V OSABI in dynamic
	ifunc-using executable.

Index: binutils-2.20.51.0.2/bfd/elf32-i386.c
===================================================================
--- binutils-2.20.51.0.2.orig/bfd/elf32-i386.c
+++ binutils-2.20.51.0.2/bfd/elf32-i386.c
@@ -4597,7 +4597,7 @@ elf_i386_hash_symbol (struct elf_link_ha
    file.  */
 
 static bfd_boolean
-elf_i386_add_symbol_hook (bfd * abfd ATTRIBUTE_UNUSED,
+elf_i386_add_symbol_hook (bfd * abfd,
 			  struct bfd_link_info * info ATTRIBUTE_UNUSED,
 			  Elf_Internal_Sym * sym,
 			  const char ** namep ATTRIBUTE_UNUSED,
@@ -4605,7 +4605,8 @@ elf_i386_add_symbol_hook (bfd * abfd ATT
 			  asection ** secp ATTRIBUTE_UNUSED,
 			  bfd_vma * valp ATTRIBUTE_UNUSED)
 {
-  if (ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
+  if ((abfd->flags & DYNAMIC) == 0
+      && ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
     elf_tdata (info->output_bfd)->has_ifunc_symbols = TRUE;
 
   return _bfd_elf_add_sharable_symbol (abfd, info, sym, namep, flagsp,
Index: binutils-2.20.51.0.2/bfd/elf32-ppc.c
===================================================================
--- binutils-2.20.51.0.2.orig/bfd/elf32-ppc.c
+++ binutils-2.20.51.0.2/bfd/elf32-ppc.c
@@ -3142,7 +3142,8 @@ ppc_elf_add_symbol_hook (bfd *abfd,
       *valp = sym->st_size;
     }
 
-  if (ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
+  if ((abfd->flags & DYNAMIC) == 0
+      && ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
     elf_tdata (info->output_bfd)->has_ifunc_symbols = TRUE;
 
   return TRUE;
Index: binutils-2.20.51.0.2/bfd/elf64-ppc.c
===================================================================
--- binutils-2.20.51.0.2.orig/bfd/elf64-ppc.c
+++ binutils-2.20.51.0.2/bfd/elf64-ppc.c
@@ -4548,7 +4548,7 @@ make_fdh (struct bfd_link_info *info,
    function type.  */
 
 static bfd_boolean
-ppc64_elf_add_symbol_hook (bfd *ibfd ATTRIBUTE_UNUSED,
+ppc64_elf_add_symbol_hook (bfd *ibfd,
 			   struct bfd_link_info *info,
 			   Elf_Internal_Sym *isym,
 			   const char **name ATTRIBUTE_UNUSED,
@@ -4557,7 +4557,10 @@ ppc64_elf_add_symbol_hook (bfd *ibfd ATT
 			   bfd_vma *value ATTRIBUTE_UNUSED)
 {
   if (ELF_ST_TYPE (isym->st_info) == STT_GNU_IFUNC)
-    elf_tdata (info->output_bfd)->has_ifunc_symbols = TRUE;
+    {
+      if ((ibfd->flags & DYNAMIC) == 0)
+	elf_tdata (info->output_bfd)->has_ifunc_symbols = TRUE;
+    }
   else if (ELF_ST_TYPE (isym->st_info) == STT_FUNC)
     ;
   else if (*sec != NULL
Index: binutils-2.20.51.0.2/bfd/elf64-x86-64.c
===================================================================
--- binutils-2.20.51.0.2.orig/bfd/elf64-x86-64.c
+++ binutils-2.20.51.0.2/bfd/elf64-x86-64.c
@@ -4234,7 +4234,8 @@ elf64_x86_64_add_symbol_hook (bfd *abfd,
       return TRUE;
     }
 
-  if (ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
+  if ((abfd->flags & DYNAMIC) == 0
+      && ELF_ST_TYPE (sym->st_info) == STT_GNU_IFUNC)
     elf_tdata (info->output_bfd)->has_ifunc_symbols = TRUE;
 
   return _bfd_elf_add_sharable_symbol (abfd, info, sym, namep, flagsp,
Index: binutils-2.20.51.0.2/ld/testsuite/ld-ifunc/ifunc.exp
===================================================================
--- binutils-2.20.51.0.2.orig/ld/testsuite/ld-ifunc/ifunc.exp
+++ binutils-2.20.51.0.2/ld/testsuite/ld-ifunc/ifunc.exp
@@ -257,8 +257,8 @@ if {! [check_osabi tmpdir/static_prog {U
     fail "Static ifunc-using executable does not have an OS/ABI field of LINUX"
     set fails [expr $fails + 1]
 }
-if {! [check_osabi tmpdir/dynamic_prog {UNIX - Linux}]} {
-    fail "Dynamic ifunc-using executable does not have an OS/ABI field of LINUX"
+if {! [check_osabi tmpdir/dynamic_prog {UNIX - System V}]} {
+    fail "Dynamic ifunc-using executable does not have an OS/ABI field of System V"
     set fails [expr $fails + 1]
 }
 if {! [check_osabi tmpdir/static_nonifunc_prog {UNIX - System V}]} {
